{"ast":null,"code":"var _jsxFileName = \"/Users/louysgackstetter/Desktop/CRUD/frontend/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useState, useEffect } from 'react';\nimport Note from './Note.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [id, setId] = useState(0);\n\n  async function getNotes() {\n    const response = await fetch('http://localhost:3001');\n    const parsedResponse = await response.json();\n    setNotes(parsedResponse);\n  } // Define event handlers\n\n\n  const handlers = {\n    handleAdd: async () => {\n      await fetch('http://localhost:3001/add');\n      /*setNotes([\n        ...notes,\n        {\n          content: '',\n          title: '',\n          id: id\n        }\n      ]);\n      setId(id + 1)*/\n    },\n    handleChange: e => {\n      const id = parseInt(e.target.id);\n      const changedNote = notes.filter(note => note.id === id);\n      changedNote.content = e.target.value;\n    },\n    handleDelete: async e => {\n      const id = parseInt(e.target.id);\n      await fetch(`http://localhost:3001/delete/:${id}`);\n      /* setNotes(notes.filter(note => note.id !== id \n      )); */\n    }\n  }; //Convert notes to array of Note Components\n\n  const noteComponents = [];\n\n  for (const note of notes) {\n    noteComponents.push( /*#__PURE__*/_jsxDEV(Note, {\n      content: note.content,\n      title: note.title,\n      id: note.id,\n      handlers: handlers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this));\n  }\n\n  useEffect(() => {\n    getNotes();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [noteComponents, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addNote\",\n      type: \"Button\",\n      onClick: handlers.handleAdd,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XqAFUHXX/IMjMamJKEvFCAJ1Tgo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/louysgackstetter/Desktop/CRUD/frontend/src/Components/App.js"],"names":["useState","useEffect","Note","App","notes","setNotes","id","setId","getNotes","response","fetch","parsedResponse","json","handlers","handleAdd","handleChange","e","parseInt","target","changedNote","filter","note","content","value","handleDelete","noteComponents","push","title"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,CAAD,CAA5B;;AAEA,iBAAeQ,QAAf,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAA5B;AACA,UAAMC,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;AACAP,IAAAA,QAAQ,CAACM,cAAD,CAAR;AACD,GARY,CAWb;;;AACA,QAAME,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAE,YAAY;AACrB,YAAMJ,KAAK,CAAC,2BAAD,CAAX;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAZc;AAafK,IAAAA,YAAY,EAAGC,CAAD,IAAO;AACnB,YAAMV,EAAE,GAAGW,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASZ,EAAV,CAAnB;AACA,YAAMa,WAAW,GAAGf,KAAK,CAACgB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACf,EAAL,KAAYA,EAAjC,CAApB;AACAa,MAAAA,WAAW,CAACG,OAAZ,GAAsBN,CAAC,CAACE,MAAF,CAASK,KAA/B;AAED,KAlBc;AAmBfC,IAAAA,YAAY,EAAE,MAAOR,CAAP,IAAa;AACzB,YAAMV,EAAE,GAAGW,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASZ,EAAV,CAAnB;AACA,YAAMI,KAAK,CAAE,iCAAgCJ,EAAG,EAArC,CAAX;AACA;AACN;AACK;AAxBc,GAAjB,CAZa,CAuCb;;AACA,QAAMmB,cAAc,GAAG,EAAvB;;AACA,OAAK,MAAMJ,IAAX,IAAmBjB,KAAnB,EAA0B;AACxBqB,IAAAA,cAAc,CAACC,IAAf,eAAoB,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEL,IAAI,CAACC,OAApB;AAA6B,MAAA,KAAK,EAAED,IAAI,CAACM,KAAzC;AAAgD,MAAA,EAAE,EAAEN,IAAI,CAACf,EAAzD;AAA6D,MAAA,QAAQ,EAAEO;AAAvE;AAAA;AAAA;AAAA;AAAA,YAApB;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACT,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGiB,cADH,eAEE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAA0C,MAAA,OAAO,EAAEZ,QAAQ,CAACC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvDQX,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import '../App.css';\nimport { useState, useEffect} from 'react';\nimport Note from './Note.js';\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n  const [id, setId] = useState(0)\n\n  async function getNotes() {\n    const response = await fetch('http://localhost:3001')\n    const parsedResponse = await response.json()\n    setNotes(parsedResponse)\n  }\n  \n\n  // Define event handlers\n  const handlers = {\n    handleAdd: async () => {\n      await fetch('http://localhost:3001/add')\n      /*setNotes([\n        ...notes,\n        {\n          content: '',\n          title: '',\n          id: id\n        }\n      ]);\n      setId(id + 1)*/\n    },\n    handleChange: (e) => {\n      const id = parseInt(e.target.id);\n      const changedNote = notes.filter(note => note.id === id);\n      changedNote.content = e.target.value;\n\n    },\n    handleDelete: async (e) => {\n      const id = parseInt(e.target.id);\n      await fetch(`http://localhost:3001/delete/:${id}`)\n      /* setNotes(notes.filter(note => note.id !== id \n      )); */\n    }\n  }\n\n  //Convert notes to array of Note Components\n  const noteComponents = [];\n  for (const note of notes) {\n    noteComponents.push(<Note content={note.content} title={note.title} id={note.id} handlers={handlers}/>);\n  }\n\n  useEffect(() => {\n    getNotes()\n  })\n\n  return (\n    <div className=\"app\">\n      {noteComponents}\n      <button className=\"addNote\" type=\"Button\" onClick={handlers.handleAdd}>+</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}