{"ast":null,"code":"var _jsxFileName = \"/Users/louysgackstetter/Desktop/CRUD/frontend/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useState } from 'react';\nimport Note from './Note.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [id, setId] = useState(0);\n\n  async function getNotes() {\n    const response = await fetch('http://localhost:3001');\n    const parsedResponse = await response.json();\n    console.log(parsed);\n    return test;\n  } // Define event handlers\n\n\n  const handlers = {\n    handleAdd: () => {\n      setNotes([...notes, {\n        content: '',\n        title: '',\n        id: id\n      }]);\n      setId(id + 1);\n    },\n    handleChange: e => {\n      const id = parseInt(e.target.id);\n      const changedNote = notes.filter(note => note.id === id);\n      changedNote.content = e.target.value;\n    },\n    handleDelete: e => {\n      const id = parseInt(e.target.id);\n      setNotes(notes.filter(note => note.id !== id));\n    }\n  }; //Convert notes to array of Note Components\n\n  const noteComponents = [];\n\n  for (const note of notes) {\n    noteComponents.push( /*#__PURE__*/_jsxDEV(Note, {\n      content: note.content,\n      title: note.title,\n      id: note.id,\n      handlers: handlers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [noteComponents, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addNote\",\n      type: \"Button\",\n      onClick: handlers.handleAdd,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TAX+KfYhoxPkgyS2tr+qjh6Ke08=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/louysgackstetter/Desktop/CRUD/frontend/src/Components/App.js"],"names":["useState","Note","App","notes","setNotes","id","setId","getNotes","response","fetch","parsedResponse","json","console","log","parsed","test","handlers","handleAdd","content","title","handleChange","e","parseInt","target","changedNote","filter","note","value","handleDelete","noteComponents","push"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,CAAD,CAA5B;;AAEA,iBAAeO,QAAf,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAA5B;AACA,UAAMC,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,WAAOC,IAAP;AACD,GATY,CAWb;;;AACA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAE,MAAM;AACfb,MAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AACEe,QAAAA,OAAO,EAAE,EADX;AAEEC,QAAAA,KAAK,EAAE,EAFT;AAGEd,QAAAA,EAAE,EAAEA;AAHN,OAFO,CAAD,CAAR;AAQAC,MAAAA,KAAK,CAACD,EAAE,GAAG,CAAN,CAAL;AACD,KAXc;AAYfe,IAAAA,YAAY,EAAGC,CAAD,IAAO;AACnB,YAAMhB,EAAE,GAAGiB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASlB,EAAV,CAAnB;AACA,YAAMmB,WAAW,GAAGrB,KAAK,CAACsB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACrB,EAAL,KAAYA,EAAjC,CAApB;AACAmB,MAAAA,WAAW,CAACN,OAAZ,GAAsBG,CAAC,CAACE,MAAF,CAASI,KAA/B;AAED,KAjBc;AAkBfC,IAAAA,YAAY,EAAGP,CAAD,IAAO;AACnB,YAAMhB,EAAE,GAAGiB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASlB,EAAV,CAAnB;AACAD,MAAAA,QAAQ,CAACD,KAAK,CAACsB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACrB,EAAL,KAAYA,EAAjC,CAAD,CAAR;AAED;AAtBc,GAAjB,CAZa,CAqCb;;AACA,QAAMwB,cAAc,GAAG,EAAvB;;AACA,OAAK,MAAMH,IAAX,IAAmBvB,KAAnB,EAA0B;AACxB0B,IAAAA,cAAc,CAACC,IAAf,eAAoB,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEJ,IAAI,CAACR,OAApB;AAA6B,MAAA,KAAK,EAAEQ,IAAI,CAACP,KAAzC;AAAgD,MAAA,EAAE,EAAEO,IAAI,CAACrB,EAAzD;AAA6D,MAAA,QAAQ,EAAEW;AAAvE;AAAA;AAAA;AAAA;AAAA,YAApB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGa,cADH,eAEE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAA0C,MAAA,OAAO,EAAEb,QAAQ,CAACC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDQf,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import '../App.css';\nimport { useState } from 'react';\nimport Note from './Note.js';\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n  const [id, setId] = useState(0)\n\n  async function getNotes() {\n    const response = await fetch('http://localhost:3001')\n    const parsedResponse = await response.json()\n    console.log(parsed)\n    return test;\n  }\n\n  // Define event handlers\n  const handlers = {\n    handleAdd: () => {\n      setNotes([\n        ...notes,\n        {\n          content: '',\n          title: '',\n          id: id\n        }\n      ]);\n      setId(id + 1)\n    },\n    handleChange: (e) => {\n      const id = parseInt(e.target.id);\n      const changedNote = notes.filter(note => note.id === id);\n      changedNote.content = e.target.value;\n\n    },\n    handleDelete: (e) => {\n      const id = parseInt(e.target.id);\n      setNotes(notes.filter(note => note.id !== id\n      ));\n    }\n  }\n\n  //Convert notes to array of Note Components\n  const noteComponents = [];\n  for (const note of notes) {\n    noteComponents.push(<Note content={note.content} title={note.title} id={note.id} handlers={handlers}/>);\n  }\n\n  return (\n    <div className=\"app\">\n      {noteComponents}\n      <button className=\"addNote\" type=\"Button\" onClick={handlers.handleAdd}>+</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}